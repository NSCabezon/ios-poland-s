platform :ios, '12.3'
install! 'cocoapods', :deterministic_uuids => false

source 'https://github.com/CocoaPods/Specs.git'

load "../santander-one/CorePods.rb"
# --------- General Core dependencies
def core_dependencies
  pod 'SelfSignedCertificate', :path => '../santander-one/SelfSignedCertificate'
end


def core_thirdparty_dependencies
  pod 'IQKeyboardManagerSwift', '6.5.6'
  pod 'Kingfisher', '5.15.8'
  pod 'lottie-ios'
  pod 'TealiumIOS', '5.6.6'
  pod 'RxSwift', '6.2.0'
end

# --------- Poland only dependencies
def pl_features
  pod 'PLLogin', :path => '../Modules/Features/PLLogin'
  pod 'BLIK', :path => '../Modules/Features/BLIK'
  pod 'TaxTransfer', :path => '../Modules/Features/TaxTransfer'
  pod 'CreditCardRepayment', :path => '../Modules/Features/CreditCardRepayment'
  pod 'PLHelpCenter', :path => '../Modules/Features/PLHelpCenter'
  pod 'LoanSchedule', :path => '../Modules/Features/LoanSchedule'
  pod 'mCommerce', :path => '../Modules/Features/mCommerce'
  pod 'PLNotificationsInbox', :path => '../Modules/Features/PLNotificationsInbox'
  pod 'CharityTransfer', :path => '../Modules/Features/CharityTransfer'
  pod 'PhoneTopUp', :path => '../Modules/Features/PhoneTopUp'
  pod 'ZusTransfer', :path => '../Modules/Features/ZusTransfer'
  pod 'ZusSMETransfer', :path => '../Modules/Features/ZusSMETransfer'
  pod 'Authorization', :path => '../Modules/Features/Authorization'
  pod 'PLContexts', :path => '../Modules/Features/PLContexts'
  pod 'SplitPayment', :path => '../Modules/Features/SplitPayment'
  pod 'ScanAndPay', :path => '../Modules/Features/ScanAndPay'
  pod 'PLQuickBalance', :path => '../Modules/Features/PLQuickBalance'
end

def pl_libraries
  pod 'SANPLLibrary', :path => '../Modules/Libraries/SANPLLibrary'
  pod 'PLLegacyAdapter', :path => '../Modules/Libraries/PLLegacyAdapter'
  pod 'PLCommons', :path => '../Modules/Libraries/PLCommons'
  pod 'PLUI', :path => '../Modules/Libraries/PLUI'
  pod 'DemoAuthenticator', :path => '../Modules/Libraries/DemoAuthenticator'
  pod 'PLNotifications', :path => '../Modules/Libraries/PLNotifications'
  pod 'PLCommonOperatives', :path => '../Modules/Libraries/PLCommonOperatives'
  pod 'PLCryptography', :path => '../Modules/Libraries/PLCryptography'
  pod 'PLScenes', :path => '../Modules/Libraries/PLScenes'
end

def pl_thirdparty_dependencies
  pod 'SwiftLint', '0.43.1'
  pod 'Dynatrace', '~> 8.227'
  pod 'Vcc', :git => 'git@github.com:santander-group-europe/ios-poland-onlineAdvisor.git', :tag => '5.10.20220520161723.3834'
end

#------------ Tests ----------------
def core_test_dependencies
  unit_test_commons
  core_test_data
end

# --------- Target configuration
target 'Santander' do
  use_frameworks!

  core_features
  core_dependencies
  core_thirdparty_dependencies

  pl_features
  pl_libraries
  pl_thirdparty_dependencies

  target 'SantanderTests' do
        inherit! :search_paths
        core_test_dependencies
  end
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
	target.build_configurations.each do |config|
	  if ["Intern-Debug", "Pre-Debug", "Dev-Debug", "Pro-Debug", "Regression-Debug", "Uat-Debug", "Preprod-Debug", "Test"].include? config.name
		config.build_settings['SWIFT_OPTIMIZATION_LEVEL'] = '-Onone'
		config.build_settings['GCC_OPTIMIZATION_LEVEL'] = '0'
		config.build_settings['ONLY_ACTIVE_ARCH'] = 'YES'
		config.build_settings['SWIFT_WHOLE_MODULE_OPTIMIZATION'] = 'YES'
		config.build_settings['SWIFT_ACTIVE_COMPILATION_CONDITIONS'] = 'DEBUG'
		config.build_settings['SWIFT_VERSION'] = '5.0'
		config.build_settings["EXCLUDED_ARCHS[sdk=iphonesimulator*]"] = "arm64"
    config.build_settings['ENABLE_TESTABILITY'] = 'YES'
	  end
	end
  end
end

$static_framework = ['Vcc']
pre_install do |installer|
  Pod::Installer::Xcode::TargetValidator.send(:define_method, :verify_no_static_framework_transitive_dependencies) {}
  installer.pod_targets.each do |pod|
    if $static_framework.include?(pod.name)
      def pod.build_type;
      Pod::BuildType.static_framework
    end
  end
end
end
